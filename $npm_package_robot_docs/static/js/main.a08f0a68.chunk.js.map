{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","listItems.js","Title.js","Chart.js","Deposits.js","Orders.js","components/logging/LogMessage.js","components/logging/LogData.js","redux/actionTypes.js","components/logging/LogFileList.js","redux/actions.js","components/ytci/SpotWeld.js","MainMenu.js","components/ytci/SpotWeldData.js","RechartsTest.js","Dashboard.js","redux/reducers/logData.js","redux/reducers/logFileList.js","redux/reducers/switchPage.js","redux/reducers/spotWeldData.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ListItem","ListItemIcon","ListItemText","ListSubheader","Title","props","Typography","component","variant","color","gutterBottom","children","connect","state","spotWeldData","useTheme","data","spotWeldList","map","spotWeld","index","x","y","z","Fragment","ResponsiveContainer","LineChart","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","yAxisId","orientation","Tooltip","Legend","Line","type","stroke","activeDot","r","makeStyles","depositContext","flex","createData","id","date","name","shipTo","paymentMethod","amount","theme","seeMore","marginTop","spacing","LogMessage","this","robName","dateFormat","createTime","getLevelName","level","loggingName","message","TableRow","TableCell","fmt","ret","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","length","padStart","strLevel","strLogMessage","numStartIndex","numStopIndex","Date","substring","indexOf","React","Component","LogData","Table","size","TableHead","TableBody","logMessages","logMessage","strData","patt","result","match","messages","i","parse","trim","logData","GET_LOGDATA","GET_LOGFILELIST","SWITCH_PAGE","GET_SPOTWELDDATA","LogFileList","getFileListFromRWS","request","XMLHttpRequest","onload","fileNameList","JSON","responseText","_embedded","_state","file","_title","reverse","getLogFileList","parseFileName","parseFromRWS","year","month","open","send","fileDate","url","getLogData","fileName","button","onClick","handleClick","primary","inset","logFileList","payload","SpotWeld","processType","processTypeName","parseInt","MainMenu","numIndex","strTarget","value","getSpotWeldData","obj","numTotalQuantity","parseSpotWeldQuantityFromRWS","switchPage","loadSpotWeldData","dispatch","page","ConnectedMainMenu","columns","field","headerName","width","CustomToolbar","rows","getProcessTypeName","style","height","pageSize","components","Toolbar","uv","pv","amt","Copyright","align","Link","href","useStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","GetMainContent","mainContent","classes","useState","setOpen","fixedHeightPaper","clsx","className","CssBaseline","AppBar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","Paper","Box","pt","initialState","combineReducers","action","slice","undefined","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a08f0a68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n    <div>\n        <ListItem button>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <ShoppingCartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Orders\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Customers\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <LayersIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Integrations\" />\n        </ListItem>\n    </div>\n);\n\nexport const secondaryListItems = (\n    <div>\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Current month\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Last quarter\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Year-end sale\" />\n        </ListItem>\n    </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, CartesianGrid, Tooltip, Legend} from 'recharts';\nimport Title from './Title';\nimport { connect } from \"react-redux\";\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n//const data = [\n//  createData('00:00', 0),\n//  createData('03:00', 300),\n//  createData('06:00', 600),\n//  createData('09:00', 800),\n//  createData('12:00', 1500),\n//  createData('15:00', 2000),\n//  createData('18:00', 2400),\n//  createData('21:00', 2400),\n//  createData('24:00', undefined),\n//];\n\nfunction Chart(props) {\n    const theme = useTheme();\n\n    let data = props.spotWeldList.map((spotWeld, index) => {\n        return (\n            { x: spotWeld.x, y: spotWeld.y, z: spotWeld.z}\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <Title>Spot Weld Points</Title>\n            <ResponsiveContainer>\n                <LineChart\n                    data={data}\n                    margin={{\n                        top: 16,\n                        right: 16,\n                        bottom: 0,\n                        left: 24,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"y\" />\n                    <YAxis yAxisId=\"left\" />\n                    <YAxis yAxisId=\"right\" orientation=\"right\" />\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                        yAxisId=\"left\"\n                        type=\"monotone\"\n                        dataKey=\"x\"\n                        stroke=\"#8884d8\"\n                        activeDot={{ r: 8 }}\n                    />\n                    <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"z\" stroke=\"#82ca9d\" />\n                </LineChart>\n\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n    return state.spotWeldData;\n};\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Chart);\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","// JavaScript source code\r\nimport React, { Component } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nclass LogMessage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tlet strMessage = this.props.robName\r\n\t\t\t+ \":\" + LogMessage.dateFormat(\"YYYY-mm-dd HH:MM:SS\", this.props.createTime)\r\n\t\t\t+ \":\" + LogMessage.getLevelName(this.props.level)\r\n\t\t\t+ \":\" + this.props.loggingName\r\n\t\t\t+ \":\" + this.props.message;\r\n\t\treturn strMessage;\r\n\t}\r\n\r\n\tstatic dateFormat(fmt, date) {\r\n\t\tlet ret;\r\n\t\tconst opt = {\r\n\t\t\t\"Y+\": date.getFullYear().toString(),\r\n\t\t\t\"m+\": (date.getMonth() + 1).toString(),\r\n\t\t\t\"d+\": date.getDate().toString(),\r\n\t\t\t\"H+\": date.getHours().toString(),\r\n\t\t\t\"M+\": date.getMinutes().toString(),\r\n\t\t\t\"S+\": date.getSeconds().toString()\r\n\t\t};\r\n\t\tfor (let k in opt) {\r\n\t\t\tret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n\t\t\tif (ret) {\r\n\t\t\t\tfmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn fmt;\r\n\t}\r\n\r\n\tstatic getLevelName(level) {\r\n\t\tlet strLevel;\r\n\t\tswitch (level) {\r\n\t\t\tcase 10:\r\n\t\t\t\tstrLevel = \"DEBUG\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 20:\r\n\t\t\t\tstrLevel = \"INFO\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tstrLevel = \"ERRORING\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50:\r\n\t\t\t\tstrLevel = \"CRITICAL\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tstrLevel = \"WARNING\";\r\n\t\t}\r\n\t\treturn strLevel;\r\n\t}\r\n\r\n\tstatic parse(strLogMessage) {\r\n\t\tlet message = {};\r\n\t\tlet numStartIndex = 0;\r\n\t\tlet numStopIndex = 0;\r\n\r\n\t\tmessage.createTime = new Date(strLogMessage.substring(0, 19));\r\n\r\n\t\tnumStartIndex = 20;\r\n\t\tnumStopIndex = strLogMessage.indexOf(\":\", numStartIndex);\r\n\t\tlet strLevelName = strLogMessage.substring(numStartIndex, numStopIndex);\r\n\t\tswitch (strLevelName) {\r\n\t\t\tcase \"DEBUG\":\r\n\t\t\t\tmessage.level = 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"INFO\":\r\n\t\t\t\tmessage.level = 20;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ERRORING\":\r\n\t\t\t\tmessage.level = 40;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"CRITICAL\":\r\n\t\t\t\tmessage.level = 50;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmessage.level = 30;\r\n\t\t}\r\n\r\n\t\tnumStartIndex = numStopIndex + 1;\r\n\t\tnumStopIndex = strLogMessage.indexOf(\":\", numStartIndex);\r\n\t\tmessage.loggingName = strLogMessage.substring(numStartIndex, numStopIndex);\r\n\r\n\t\tnumStartIndex = numStopIndex + 1;\r\n\t\tmessage.message = strLogMessage.substring(numStartIndex);\r\n\r\n\t\treturn message;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<TableRow key={this.props.id}>\r\n\t\t\t\t\t<TableCell>{LogMessage.dateFormat(\"YYYY-mm-dd HH:MM:SS\", this.props.createTime)}</TableCell>\r\n\t\t\t\t\t<TableCell>{LogMessage.getLevelName(this.props.level)}</TableCell>\r\n\t\t\t\t\t<TableCell>{this.props.loggingName}</TableCell>\r\n\t\t\t\t\t<TableCell>{this.props.message}</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default LogMessage;\r\n","// JavaScript source code\r\n// xcopy /Y /S build \"C:\\Users\\CNMIZHU7\\Documents\\RobotStudio\\Virtual Controllers\\Controller_Aprol\\HOME\\docs\"\r\n// xcopy /Y /S build \"C:\\Users\\CNMIZHU7\\Documents\\RobotStudio\\Virtual Controllers\\6700-525386-2020-12-11\\HOME\\docs\"\r\n\r\nimport React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LogMessage from './LogMessage';\r\n\r\nclass LogData extends React.Component {\r\n\r\n\tstatic parse(strData) {\r\n\t\tlet patt = new RegExp(\"^.*(\\r)?\\n\", \"gm\");\r\n\t\tlet result = strData.match(patt);\r\n\t\tlet messages = [];\r\n\t\tfor (let i = 0; i < result.length; i++) {\r\n\t\t\tmessages[i] = LogMessage.parse(result[i].trim());\r\n\t\t}\r\n\t\treturn messages;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n\t\t\t\t\t{\"Log Data - \" + this.props.robName }\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Table size=\"small\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell>Create Time</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Level</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Category</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Message</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.logMessages.map((logMessage, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<LogMessage\r\n\t\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\t\trobName={this.props.robName}\r\n\t\t\t\t\t\t\t\t\t\tcreateTime={logMessage.createTime}\r\n\t\t\t\t\t\t\t\t\t\tlevel={logMessage.level}\r\n\t\t\t\t\t\t\t\t\t\tloggingName={logMessage.loggingName}\r\n\t\t\t\t\t\t\t\t\t\tmessage={logMessage.message}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\treturn state.logData;\r\n};\r\n\r\nexport default connect(mapStateToProps)(LogData);\r\n","export const GET_LOGDATA = \"GET_LOGDATA\";\r\nexport const GET_LOGFILELIST = \"GET_LOGFILELIST\";\r\nexport const SWITCH_PAGE = \"SWITCH_PAGE\";\r\nexport const GET_SPOTWELDDATA = \"GET_SPOTWELDDATA\";","// JavaScript source code\r\nimport React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { connect } from \"react-redux\";\r\nimport { getLogFileList, getLogData } from \"../../redux/actions\";\r\n\r\nimport LogData from './LogData';\r\nimport LogMessage from './LogMessage';\r\n\r\nclass LogFileList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFileListFromRWS();\r\n    }\r\n\r\n    getFileListFromRWS() {\r\n        let url = \"/fileservice/$home/Logging?json=1\"\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n            let obj = JSON.parse(request.responseText);\r\n            let fileNameList = obj._embedded._state.map(file => file._title);\r\n            fileNameList.reverse();\r\n            this.props.getLogFileList(fileNameList);\r\n            if (fileNameList.length > 0) {\r\n                let file = LogFileList.parseFileName(fileNameList[0]);\r\n                this.parseFromRWS(file.robName, file.year, file.month, file.date);\r\n            }\r\n        };\r\n        request.open(\"GET\", url);\r\n        request.send();\r\n    }\r\n\r\n    parseFromRWS(robName, year, month, date) {\r\n        let fileDate = new Date(year, month, date);\r\n        let url = \"/fileservice/$home/Logging/\" + LogMessage.dateFormat(\"YYYY-mm-dd\", fileDate) + \"_\" + robName + \".log\"\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n            let messages = LogData.parse(request.responseText);\r\n            this.props.getLogData(robName, year, month, date, messages);\r\n        };\r\n        request.open(\"GET\", url);\r\n        request.send();\r\n    }\r\n\r\n    static parseFileName(fileName) {\r\n        let file = {}\r\n        let numStartIndex = 0;\r\n        let numStopIndex = 0;\r\n\r\n        file.year = fileName.substring(0, 4);\r\n        file.month = fileName.substring(5, 7) - 1;\r\n        file.date = fileName.substring(8, 10);\r\n\r\n        numStartIndex = 11;\r\n        numStopIndex = fileName.indexOf(\".\", numStartIndex);\r\n        file.robName = fileName.substring(numStartIndex, numStopIndex);\r\n\r\n        return file;\r\n    }\r\n\r\n    handleClick(fileName) {\r\n        let file = LogFileList.parseFileName(fileName);\r\n        this.parseFromRWS(file.robName, file.year, file.month, file.date);\r\n    }\r\n\r\n    render() {\r\n\r\n        const fileNameList = this.props.fileNameList.map((fileName) => {\r\n            return (\r\n                <ListItem button onClick={() => this.handleClick(fileName)}>\r\n                    {\r\n                        /*\r\n                        <ListItemIcon>\r\n                            <Description />\r\n                        </ListItemIcon>\r\n                        */\r\n                    }\r\n\r\n                    <ListItemText primary={fileName.substring(0, fileName.length - 4)} />\r\n                </ListItem>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <ListSubheader inset>Log Files</ListSubheader>\r\n                {fileNameList}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state.logFileList;\r\n};\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getLogFileList, getLogData }\r\n)(LogFileList);\r\n","import { GET_LOGDATA, GET_LOGFILELIST, SWITCH_PAGE, GET_SPOTWELDDATA} from \"./actionTypes\";\r\n\r\nexport const getLogData = (robName, year, month, date, logMessages) => ({\r\n    type: GET_LOGDATA,\r\n    payload: { robName, year, month, date, logMessages }\r\n});\r\n\r\nexport const getLogFileList = (fileNameList) => ({\r\n    type: GET_LOGFILELIST,\r\n    payload: { fileNameList }\r\n});\r\n\r\nexport const switchPage = (page) => ({\r\n    type: SWITCH_PAGE,\r\n    payload: { page }\r\n});\r\n\r\nexport const getSpotWeldData = (spotWeld) => ({\r\n    type: GET_SPOTWELDDATA,\r\n    payload: { spotWeld }\r\n});","class SpotWeld { \r\n\r\n\tconstructor() {\r\n\t\tthis.index = -1;\r\n\t\tthis.processType = 0;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn this.index\r\n\t\t\t+ \":\" + this.processType\r\n\t\t\t+ \":\" + this.x\r\n\t\t\t+ \":\" + this.y\r\n\t\t\t+ \":\" + this.z;\r\n\t}\r\n\r\n\tgetProcessTypeName() {\r\n\t\tlet processTypeName;\r\n\t\tswitch (parseInt(this.processType)) {\r\n\t\t\tcase 1:\r\n\t\t\t\tprocessTypeName = \"ArcLStart\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tprocessTypeName = \"ArcL\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tprocessTypeName = \"ArcLEnd\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tprocessTypeName = \"ArcCStart\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tprocessTypeName = \"ArcC\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tprocessTypeName = \"ArcCEnd\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tprocessTypeName = \"MoveL\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tprocessTypeName = \"MoveC\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tprocessTypeName = \"MoveJ\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 11:\r\n\t\t\t\tprocessTypeName = \"ArcCalcLStart\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12:\r\n\t\t\t\tprocessTypeName = \"ArcCalcL\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13:\r\n\t\t\t\tprocessTypeName = \"ArcCalcLEnd\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 15:\r\n\t\t\t\tprocessTypeName = \"ArcCalcC\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16:\r\n\t\t\t\tprocessTypeName = \"ArcCalcCEnd\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 21:\r\n\t\t\t\tprocessTypeName = \"SpotL\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 22:\r\n\t\t\t\tprocessTypeName = \"SpotJ\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 23:\r\n\t\t\t\tprocessTypeName = \"SpotML\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 24:\r\n\t\t\t\tprocessTypeName = \"SpotMJ\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tprocessTypeName = \"\";\r\n\t\t}\r\n\t\treturn processTypeName;\r\n\t}\r\n\r\n\tparse(strData) {\r\n\t\tlet numStartIndex = 0;\r\n\t\tlet numStopIndex = 0;\r\n\r\n\t\tnumStartIndex = strData.indexOf(\"[\") + 1;\r\n\t\tnumStopIndex = strData.indexOf(\",\", numStartIndex);\r\n\t\tthis.processType = strData.substring(numStartIndex, numStopIndex);\r\n\r\n\r\n\t\tnumStartIndex = numStopIndex + 1;\r\n\t\tnumStopIndex = strData.indexOf(\",\", numStartIndex);\r\n\t\tthis.x = strData.substring(numStartIndex, numStopIndex);\r\n\r\n\t\tnumStartIndex = numStopIndex + 1;\r\n\t\tnumStopIndex = strData.indexOf(\",\", numStartIndex);\r\n\t\tthis.y = strData.substring(numStartIndex, numStopIndex);\r\n\r\n\t\tnumStartIndex = numStopIndex + 1;\r\n\t\tnumStopIndex = strData.indexOf(\"]\", numStartIndex);\t\r\n\t\tthis.z = strData.substring(numStartIndex, numStopIndex);\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default SpotWeld;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { switchPage, getSpotWeldData } from \"./redux/actions\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\n\nimport SpotWeld from './components/ytci/SpotWeld';\n\nclass MainMenu extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    parseFromRWS(numIndex) {\r\n        let url = \"/rw/rapid/symbol/data/RAPID/T_ROB1/PartAModule/rProcessTargetList{\" + numIndex + \"}?json=1\"\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n            let obj = JSON.parse(request.responseText);\r\n            let strTarget = obj._embedded._state[0];\r\n            let spotWeld = new SpotWeld();\r\n            spotWeld.parse(strTarget.value);\r\n            spotWeld.index = numIndex;\r\n            this.props.getSpotWeldData(spotWeld);\r\n        };\r\n        request.open(\"GET\", url);\r\n        request.send();\r\n    }\n\n    parseSpotWeldQuantityFromRWS() {\r\n        let url = \"/rw/rapid/symbol/data/RAPID/T_ROB1/PartAModule/numTotalQuantity?json=1\"\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n            let obj = JSON.parse(request.responseText);\r\n            let numTotalQuantity = parseInt(obj._embedded._state[0].value);\r\n            for (let i = 1; i <= numTotalQuantity; i++) {\n                this.parseFromRWS(i);\r\n            }        \r\n        };\r\n        request.open(\"GET\", url);\r\n        request.send();\r\n    }\n\n    loadSpotWeldData() {\n        this.parseSpotWeldQuantityFromRWS();\n        this.props.switchPage(\"YTCI\")\r\n    }\n\n    render() {\n        return (\n            <div>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Logging\" onClick={() => this.props.switchPage(\"Logging\")} />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ShoppingCartIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Spot Weld\" onClick={() => this.loadSpotWeldData()} />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Tasks\" onClick={() => this.props.dispatch({ type: 'SWITCH_PAGE', payload: { page: 'YTCI' } })} />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <BarChartIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Reports\" />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <LayersIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Setting\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\nconst ConnectedMainMenu=connect(\n    null\n    , { switchPage, getSpotWeldData }\n)(MainMenu);\n\nexport { ConnectedMainMenu };\n\n//export default connect(\n//    null,\n//    { switchPage }\n//)(MainMenu);\n","// JavaScript source code\r\nimport React, { Component } from 'react';\r\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SpotWeld from './SpotWeld';\r\n\r\nconst columns = [\r\n\t{ field: 'id', headerName: 'Index', width: 100 },\r\n\t{ field: 'processType', headerName: 'Process', width: 130 },\r\n\t{ field: 'x', headerName: 'x', type: 'number', width: 130 },\r\n\t{ field: 'y', headerName: 'y', type: 'number', width: 130 },\r\n\t{ field: 'z', headerName: 'z', type: 'number', width: 130 },\r\n];\r\n\r\n//const rows = [\r\n//\t{ id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n//\t{ id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n//\t{ id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n//\t{ id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n//\t{ id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n//\t{ id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n//\t{ id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n//\t{ id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n//\t{ id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n//];\r\n\r\nfunction CustomToolbar() {\r\n\treturn (\r\n\t\t<GridToolbarContainer>\r\n\t\t\t<GridToolbarExport />\r\n\t\t</GridToolbarContainer>\r\n\t);\r\n}\r\n\r\nfunction DataGridDemo(props) {\r\n\tlet rows = props.spotWeldList.map((spotWeld, index) => {\r\n\t\treturn (\r\n\t\t\t{ id: spotWeld.index, processType: spotWeld.getProcessTypeName(), x: spotWeld.x, y: spotWeld.y, z: spotWeld.z }\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div style={{ height: 500, width: '100%' }}>\r\n\t\t\t<DataGrid\r\n\t\t\t\trows={rows}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tpageSize={100}\r\n\t\t\t\tcomponents={{\r\n\t\t\t\t\tToolbar: CustomToolbar,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn state.spotWeldData;\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tnull\r\n)(DataGridDemo);\r\n","import React from \"react\";\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n    {\r\n        name: \"Page A\",\r\n        uv: 4000,\r\n        pv: 600,\r\n        amt: 300\r\n    },\r\n    {\r\n        name: \"Page B\",\r\n        uv: 3000,\r\n        pv: 1398,\r\n        amt: 2210\r\n    },\r\n    {\r\n        name: \"Page C\",\r\n        uv: 2000,\r\n        pv: 9800,\r\n        amt: 2290\r\n    },\r\n    {\r\n        name: \"Page D\",\r\n        uv: 2780,\r\n        pv: 3908,\r\n        amt: 2000\r\n    },\r\n    {\r\n        name: \"Page E\",\r\n        uv: 1890,\r\n        pv: 4800,\r\n        amt: 2181\r\n    },\r\n    {\r\n        name: \"Page F\",\r\n        uv: 2390,\r\n        pv: 3800,\r\n        amt: 2500\r\n    },\r\n    {\r\n        name: \"Page G\",\r\n        uv: 3490,\r\n        pv: 4300,\r\n        amt: 2100\r\n    }\r\n];\r\n\r\nexport default function App() {\r\n    return (\r\n        <LineChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis yAxisId=\"left\" />\r\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n                yAxisId=\"left\"\r\n                type=\"monotone\"\r\n                dataKey=\"pv\"\r\n                stroke=\"#8884d8\"\r\n                activeDot={{ r: 8 }}\r\n            />\r\n            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n    );\r\n}\r\n","// JavaScript source code\r\nimport React, { Component } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport Chart from './Chart';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LogData from './components/logging/LogData';\r\nimport FileList from './components/logging/LogFileList';\r\nimport { ConnectedMainMenu as MainMenu } from './MainMenu';\r\n//import MainMenu from './MainMenu';\r\nimport SpotWeldList from './components/ytci/SpotWeldData';\r\n\r\nimport RechartsTest from './RechartsTest';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                ABB Auto Tier1\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nfunction GetMainContent(props) {\r\n    let mainContent = <LogData />;\r\n    switch (props.page) {\r\n        case \"Logging\":\r\n            mainContent = <LogData />;\r\n            break;\r\n        case \"YTCI\":\r\n            mainContent = <SpotWeldList />\r\n            break;\r\n        default:\r\n            mainContent = <LogData />\r\n    } \r\n    return mainContent;\r\n}\r\n\r\nfunction Dashboard(props) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        ABB Auto Tier1\r\n                    </Typography>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List><MainMenu/></List>\r\n                <Divider />\r\n                <List>\r\n                    <FileList handleClick={(fileName) => props.handleClick(fileName)} />\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                {GetMainContent(props)}\r\n                            </Paper>\r\n                        </Grid>\r\n                        {/* Chart */}\r\n                        <Grid item xs={12}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <Chart />\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <RechartsTest />\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state.switchPage;\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Dashboard);","import { GET_LOGDATA } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    robName: \"\",\r\n    year: null,\r\n    month: null,\r\n    date: null,\r\n    logMessages: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_LOGDATA: {\r\n            const { robName, year, month, date, logMessages } = action.payload;\r\n            return {\r\n                ...state,\r\n                robName: robName,\r\n                year: year,\r\n                month: month,\r\n                date: date,\r\n                logMessages: logMessages,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_LOGFILELIST } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    fileNameList: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_LOGFILELIST: {\r\n            const { fileNameList } = action.payload;\r\n            return {\r\n                ...state,\r\n                fileNameList: fileNameList,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SWITCH_PAGE } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    page: \"Logging\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SWITCH_PAGE: {\r\n            const { page } = action.payload;\r\n            return {\r\n                ...state,\r\n                page: page,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_SPOTWELDDATA } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    spotWeldList: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_SPOTWELDDATA: {\r\n            const { spotWeld } = action.payload;\r\n            let spotWeldList = state.spotWeldList.slice();\r\n            spotWeldList[spotWeld.index-1] = spotWeld;\r\n            for (let i = 0; i < spotWeld.index-1; i++) {\r\n                if (spotWeldList[i] === undefined) {\r\n                    spotWeldList[i] = spotWeld;\r\n                    spotWeldList[i].index = -1;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                spotWeldList: spotWeldList,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport logData from \"./logData\";\r\nimport logFileList from \"./logFileList\";\r\nimport switchPage from \"./switchPage\";\r\nimport spotWeldData from \"./spotWeldData\";\r\n\r\nexport default combineReducers({ logData, logFileList, switchPage, spotWeldData });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Dashboard from './Dashboard';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Dashboard />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}